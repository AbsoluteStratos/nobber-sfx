---
import path from "node:path";
import { Icon } from "astro-icon/components";

interface Props {
	name: string;
    file: string;
    keybind: string;
    clip_url: string;
    game: string;
    style?: string;
}
const {name, file, keybind, clip_url, game, style} = Astro.props;
const id = name.toLocaleLowerCase().replace(" ","-");
---
<div class="audio-container" style={style}>
    <div class="audio-name">
        {name}
        <div >
        <a href={"https://twitch.tv/" + clip_url} target="_blank" class="audio-clip-game">
            <span>{game}</span>
            <Icon name="material-symbols:link" class="game-link-icon"></Icon>
        </a>
        </div>
    </div>
    <audio id={"audio-player-"+id} controls preload="auto" src={file}></audio>
    <div class="audio-hot-key" id={"audio-hot-key-"+id}>
        <!-- <Icon name="material-symbols:keyboard" class="hot-key-icon"></Icon> -->
        <div class="hot-key-text">
            {keybind}
        </div>
    </div>
</div>


<style>
    .audio-container{
        display: flex;
        /* justify-content: center; */
        justify-content: space-between;
        align-items: center;     /* vertical */
        margin-bottom: 5px;
        gap: 10px;
        animation: slideUpFadeIn 0.6s ease-out forwards;
        opacity: 0;
    }

    @keyframes slideUpFadeIn {
        from {
            opacity: 0;
            transform: translateY(20px); /* start slightly below */
        }
        to {
            opacity: 1;
            transform: translateY(0);    /* move to natural position */
        }
    }

    .audio-name{
        width: 12rem;
        text-align: right;
        font-family: 'Comic Sans MS', cursive, sans-serif;
        color: salmon;
        font-weight: bold;
        font-size: clamp(0.5rem, 2.5vw, 1.25rem);

        paint-order: stroke fill;
        -webkit-text-stroke: 0.1em white; /* white border around text */
        text-stroke: 0.1em white;  
    }

    .audio-clip-game{
        display: flex;
        justify-content: right;
        align-items: center;
        gap: 2px;
        font-size: 0.5rem;
        -webkit-text-stroke: 0px white; /* white border around text */
        text-stroke: 0px white;         /* fallback for future support */
    }
    a:link {
        color: salmon; /* Unvisited link color */
        text-decoration: none;
    }
    a:visited {
        color: salmon; /* Visited link color */
    }

    a:hover {
        color: rgb(173, 87, 78); /* Hover link color */
        text-decoration: underline; /* Add underline on hover */
    }

    .game-link-icon {
        font-size: 0.75rem;
        padding-top: 0.25rem;
        height: 100%;
    }

    audio {
        background-color: rgb(255, 189, 182); /* Background color of the audio player container */
        border: 1px solid #e9e8e8; /* Border around the audio player */
        border-radius: 8px; /* Rounded corners */
        padding: 10px; /* Padding inside the player */
        width: 100%; /* Adjust width as needed */
        box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2); /* Add a subtle shadow */
        width: 24rem;
    }
    .audio-hot-key{
        width: 12rem;
        color: salmon;
        border: 2px solid white;
        border-radius: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        user-select: none;
        -webkit-user-select: none; /* Safari, Chrome */
        -moz-user-select: none;    /* Firefox */
        -ms-user-select: none;     /* Internet Explorer, Edge */
    }
    .audio-hot-key:hover{
        background-color: #ffd7d7;
        box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);
    }

    .hot-key-icon{
        margin-left:4px;
        font-size: 4rem;
    }
    .hot-key-text{
        margin-top: 4px;
        margin-bottom: 4px;
        font-size: 2rem;
        text-align: center;
        font-family: 'Comic Sans MS', cursive, sans-serif;
    }

     @media (max-width: 800px) {
      .audio-container {
        flex-direction: column; /* Stacks items vertically on mobile */
      }
      .audio-name{
        margin-top: 5px;
        text-align: center;
        font-size: 2rem;
        width: 100%;
      }
      .audio-clip-game{
        justify-content: center;
      }
      audio {
        width: 20rem;
    }
    }

</style>

<script define:vars={{ keybind: keybind, id: id }}>
  document.addEventListener('keydown', (event) => {
    if (event.key.toLowerCase() == keybind) {
        const audio = document.getElementById('audio-player-'+id);
        audio.currentTime = 0;
        audio.play();
    }
  });
  document.getElementById("audio-hot-key-"+id).addEventListener('click', () => {
    const audio = document.getElementById('audio-player-'+id);
    audio.currentTime = 0;
    audio.play();
  });
</script>